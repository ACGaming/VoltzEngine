buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


apply plugin: 'forge'
apply plugin: 'scala'
apply plugin: 'maven-publish'

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
group = System.getenv("TEAMCITY_PROJECT_NAME").toLowerCase()
archivesBaseName = System.getenv("TEAMCITY_PROJECT_NAME")

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
	
	replaceIn "components/References.java"
	replace "@MAJOR@", config.version.mod.major
	replace "@MINOR@", config.version.mod.minor
	replace "@REVIS@", config.version.mod.revis
	
	if (System.getenv("BUILD_NUMBER") != null) {
		replace "@BUILD@", System.getenv("BUILD_NUMBER")
	}
	else {
		replace "@BUILD@", 1
	}
}

if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"


task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}

jar {
    dependsOn copyBuildXml
    classifier = 'universal'
	
	manifest {
        attributes FMLCorePlugin: "resonant.core.ResonantPluginLoader",
				   FMLCorePluginContainsFMLMod: "true"
    }
	
    destinationDir = file 'output'
}

task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'calclavia/api/**'
    destinationDir = file 'output'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'dev'

    manifest {
        attributes FMLCorePlugin: "resonant.engine.ResonantPluginLoader",
				   FMLCorePluginContainsFMLMod: "true"
    }
}
/*
task buildProp(type: Zip) {
	classifier = "properties"
    from sourceSets*.allSource
    include 'calclavia/api/**'
    destinationDir = file 'output'
}*/

artifacts {
    archives apiZip
    //archives buildProp
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact deobfJar
			artifact apiZip
			//artifact buildProp

			/*
			artifact{
				classifier = "changelog"
				file 'output/' + "${System.getenv("TEAMCITY_PROJECT_NAME")}-${project.version}" + '-changelog' + '.txt'
			}
			
			artifact{
				classifier = "properties"
				file 'output/build.properties'
			}*/
        }
    }
    repositories {
        maven {
            url "file://var/www/maven"
        }
    }
}

repositories {
    maven {
        url 'http://calclavia.com/maven'
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Repo'
        url "https://chickenbones.net/maven/"
    }

}
dependencies {
    compile 'universalelectricity:Universal-Electricity:+:dev'
    //compile "mcp.mobius.waila:Waila:1.5.2a"
}


import net.minecraftforge.gradle.tasks.dev.ChangelogTask
import net.minecraftforge.gradle.common.Constants
import net.minecraftforge.gradle.delayed.*

task createChangelog(type: ChangelogTask) {
    def jobName = System.getenv("TEAMCITY_PROJECT_NAME")
    def buildNumber = "${System.getenv().BUILD_NUMBER}"
    jobName.replaceAll(' ','%20')
    setServerRoot(new DelayedString(project, 'http://ci.calclavia.com/'))
    setJobName(new DelayedString(project, jobName.toString()));
    setAuthName(new DelayedString(project, 'console_script'));
    setAuthPassword(new DelayedString(project, '625d2ac53190be3422faa0c474fb299b'));
    setTargetBuild({buildNumber.toString()});
    setOutput(new DelayedFile(project, 'output/' + jobName + "-${project.version}" + '-changelog' + '.txt'));
}

build.dependsOn "createChangelog"
