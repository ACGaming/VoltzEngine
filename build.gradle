buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:1.3.2'
        classpath 'org.ajoberstar:grgit:1.4.1'
    }
}

plugins {
  id 'com.matthewprenger.cursegradle' version '1.0.1'
  id 'net.saliman.cobertura' version '2.2.5'
  id 'com.github.kt3k.coveralls' version '2.0.1'
  id "com.github.johnrengelman.shadow" version "1.2.2"
  id "net.franz-becker.gradle-lombok" version "1.3"
  id 'com.jfrog.bintray' version '1.1'
}

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/buildScripts/index.gradle'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'curseforge'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/buildScripts/scripts/forge/deps.gradle'

println "Current Minecraft version = " + minecraft.apiVersion

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

javadoc.dependsOn(sourceMainJava)
javadoc.dependsOn(sourceMainScala)

minecraft {
    replaceIn "References.java"
    replaceIn "com/builtbroken/mc/core/deps/DepDownloader.java"
    replace "@bbm_url@", bbm_url
    replace "@CL@", coding_lib
    replace "@CL-name@", CL_name
    replace "@CL_maj@", CL_major
    replace "@CL_min@", CL_minor
    replace "@CL_rev@", CL_revis
    replace "@CL_bu@", CL_build
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		//include '**/*.lang'
		include '**/*.info'
		include '**/*.properties'

		expand 'version': project.version, 'mcversion': project.minecraft.version
		// replace version and MCVersion
	}
    
	// copy everything else, thats not text
	from(sourceSets.main.resources.srcDirs) {
		exclude '**/*.info'
		exclude '**/*.properties'
	}
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

import org.ajoberstar.grgit.*

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

lombok { 
    // optional: values below are the defaults
    version = "1.16.4"
    sha256 = "3ca225ce3917eac8bf4b7d2186845df4e70dcdede356dca8537b6d78a535c91e"
}

task deployCurse {
     //dependsOn curseforge227048
}

import org.ajoberstar.grgit.Commit

task curseTest {
  onlyIf {
    grgit.log().find { it.fullMessage.contains("[deploy]") }
  }
  doLast {
    // do your other grgit stuff
    println "uploading to curseForge"
    //tasks.build.dependsOn curseforge227048
  }
  tasks.deployCurse.dependsOn tasks.deployCurse
  mustRunAfter "deobfJar"

}

//tasks.build.dependsOn tasks.curseforge

jar {
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": currentJvm,
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash,
            "FMLCorePlugin": "com.builtbroken.mc.core.EngineCoreMod",
            "FMLAT": "VE_at.cfg"
    )
	manifest {
		attributes 'FMLCorePlugin': 'com.builtbroken.mc.core.EngineCoreMod',
				'FMLCorePluginContainsFMLMod': 'true'
	}
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

file("VoltzEngine.txt").text = version;

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}